transform

{
  div: [= {
    a: [+ {a: 3  b:4}] 
    b: -2
  }] 
  
  mapper1: [(# "$map") {
    list: [1 2 3] 
    t: (# "$add3")
  }] 
  
  mapper2: [(# "$map2") {
    list: [3  4  5] 
    t: (# "$add3")
  }] 
  
  backer: [(# "$back") {
    in: [1 2 4 6 7 3 9]
  }] 
  
  fronter: [(# "$front") {
    in: [1 2 4 6 7 3 9]
  }]
}

source:
{
  map2: [(# "$reduce") {
    list: (# "@list") 
    t:
      [
        'flatten 
        '[if {
            cond: '(# "@accum") 
            true: '(# "@accum") 
            false: []
        }] 
        (# "@t")
      ]
  }]
  head: (# "@in[0]") 
  tail: (## "@in[1:]") 
  back: (## "@in[-1:]") 
  front: (## "@in[:-1]") 
  append: [
    && 
    (# "@head 
    (# "@tail")
  ] 
  reverse: [if {
    cond: (# "@in") 
    true: 
    [&& 
      [(# "$reverse") {
        in: [(# "$tail") {
          in: (# "@in")
        }]
      }] 
      [(# "$head") {
        in: (# "@in")
      }]
    ]
    false: '[]
  }]
   
  add3: [+ {
    a: (# "@item") 
    b: 3
  }] 
  
  map: [if {
    cond: (# "@list") 
    true: 
      '[&& 
        [(# "@t") {
          item: [(# "$head") {
            in: (# "@list")
          }]
        }] 
        [(# "$map {
          list: [(# "$tail") {
            in: (# "@list")
          }] 
          t: (# "@t")
        }]
      ]
    false: '[]
  }] 
  reduce: {
    &: if 
    cond: (# "@list") 
    true: 
        '[(# "$reduce") {
          list: [(# "$tail") {
            in: (# "@list")
          }] 
          t: (# "@t") 
          accum: [(# "@t") {
            item: [(# "$head") {
              in: (# "@list")
            }] 
            accum: (# "@accum")
          }]
        }]
    false: '(# "@accum")
  }
}

output:
{
  div: false 
  mapper1: [4 5 6] 
  mapper2: [6 7 8] 
  backer: [9] 
  fronter: [1 2 4 6 7 3]
}